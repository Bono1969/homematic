! https://github.com/jollyjinx/homematic/blob/master/presenceVariableAggregation.hms
!
! Aggregates presence variables to ones that are used in scripts.
!
! Not all persons have a WLAN device to track their presence in the house. 
! So I have variables that can be manually set, or set via a calendar/timetable.
!
! Presence variables have the form:     presense.[presencetype].[personname]
! Aggregated variables have the form:   presense.[personname] and presence.any
!
! Lets assume the following variables are set:
!
!    presence.wlan.guests:       away
!    presence.wlan.patrick:      PRESENT        My phone is logged to the wlan
!    presence.wlan.isabel:       away
!
!    presence.manual.guests:     away
!    presence.manual.patrick:    away
!    presence.manual.isabel:     PRESENT        manually set via a virtual ccu2 switch
!
!    presence.calender.guests:   away           presence set via a timetable
!    presence.calender.patrick:  away
!    presence.calender.isabel:   away
!    .
!    .
!    .
! Those variables are aggregated with this through variables named presence.type.personname
! This script creates then aggregated presence variables:
!
!    presence.any:           PRESENT         
!    presence.guests:        away
!    presence.patrick:       PRESENT
!    presence.isabel:        PRESENT
!    .
!    .
!    .
!
! As I have a timetable for my daughter isabel and she has no presence device
! she is set at home via a timetable or manually. As she is not at home alone
! her aggregated presence is only set when someone else is at home.
!
!
!----- User setable variables

string  presenceprefix  = "presence";
string  anyperson       = "any";
string  kids            = "isabel,officeuser";         ! comma seperated list
boolean debug           = false;

! 
!------- nothing needs to be changed below.
! 

string  allpersons      = ","#anyperson#",";
string  allkids         = ","#kids#",";
string  presentpersons  = ",";
boolean adultispresent  = false;

string variableID;

foreach(variableID, dom.GetObject(ID_SYSTEM_VARIABLES).EnumUsedIDs()) 
{
    string  variablename    = dom.GetObject(variableID).Name();                     if(debug){WriteLine("Variable:"#variablename);}
    
    if( presenceprefix == variablename.StrValueByIndex(".",0) )
    {                                                                               if(debug){WriteLine("\t is presence variable");}
        string  personname  = variablename.StrValueByIndex(".",2);
        
        if( (personname.Length() > 0) && (personname != anyperson) )
        {                                                                           if(debug){WriteLine("\t personname:"#personname);}
            if( -1 == allpersons.Find(","#personname#",") )
            {
                allpersons  = allpersons#personname#",";                            if(debug){WriteLine("\tAdding to all:"#personname);}
            }
            if( -1 == presentpersons.Find(","#personname#",") )
            {   
                boolean personispresent = dom.GetObject(variablename).Value();      if(debug){WriteLine("\t"#personname#" is present:"#personispresent);}
                
                if( personispresent )
                {
                    if( (!adultispresent) && (-1 == allkids.Find(","#personname#",")) )
                    {
                        adultispresent  = true;
                        presentpersons  = ","#anyperson#presentpersons;             if(debug){WriteLine("\tadultispresent is present.");}
                    }
                    presentpersons  = presentpersons#personname#",";                if(debug){WriteLine("\tpresentpersons:"#presentpersons);}
                }   
            }
            else
            {
                                                                                    if(debug){WriteLine("\t"#personname#" already present");}
            }
        }
    }
}


if(debug) { WriteLine("\nallpersons:"#allpersons#"\n\tpresentpersons:"#presentpersons#"\n\tadultispresent:"#adultispresent); }


string personname;

foreach(personname,allpersons.Split(","))
{
    if( personname.Length() > 0 )
    {
        boolean ispresent = false;
        
        if( (adultispresent) && (-1 != presentpersons.Find(","#personname#",")) )
        {                                                                           if(debug){WriteLine("\tpersonname found:"#personname);}
            ispresent = true;
        }
        
        var presencevariable = dom.GetObject(presenceprefix#"."#personname);
        if( ispresent != presencevariable.Value() )
        {                                                                           if(debug){WriteLine("\t"#presenceprefix#"."#personname#" has changed:"#ispresent);}
            if(!debug){presencevariable.State(ispresent);}
        }
        else
        {                                                                           if(debug){WriteLine("\t"#presenceprefix#"."#personname#" has not changed:"#ispresent);}

        }
    }
}
